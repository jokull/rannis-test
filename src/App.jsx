import React, { useEffect, useState } from "react";
import {
  VictoryBar,
  VictoryChart,
  VictoryAxis,
  VictoryStack,
  VictoryLegend,
  VictoryLabel,
} from "victory";

import theme from "./victoryTheme";

const Logo = () => (
  <svg
    width="124"
    height="20"
    viewBox="0 0 496 80"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g clipPath="url(#clip0)">
      <path
        d="M136.994 30.859H126.18C125.302 30.859 124.59 31.571 124.59 32.4492V78.0424C124.59 78.9207 125.302 79.6327 126.18 79.6327H136.994C137.872 79.6327 138.584 78.9207 138.584 78.0424V32.4492C138.584 31.571 137.872 30.859 136.994 30.859Z"
        fill="black"
      />
      <path
        d="M212.958 7.10084H202.144C201.266 7.10084 200.554 7.81283 200.554 8.69112V78.035C200.554 78.9133 201.266 79.6253 202.144 79.6253H212.958C213.836 79.6253 214.548 78.9133 214.548 78.035V8.69112C214.548 7.81283 213.836 7.10084 212.958 7.10084Z"
        fill="black"
      />
      <path
        d="M306.371 30.6445C297.783 30.6445 293.648 30.7184 282.516 30.859C282.3 30.8281 282.08 30.8479 281.873 30.9169C281.666 30.9859 281.478 31.1021 281.324 31.2564C281.169 31.4107 281.053 31.5989 280.984 31.8059C280.915 32.013 280.895 32.2332 280.926 32.4493V78.0424C280.895 78.2585 280.915 78.4787 280.984 78.6858C281.053 78.8928 281.169 79.0809 281.324 79.2353C281.478 79.3896 281.666 79.5058 281.873 79.5748C282.08 79.6438 282.3 79.6636 282.516 79.6327H293.33C293.546 79.6636 293.767 79.6438 293.974 79.5748C294.181 79.5058 294.369 79.3896 294.523 79.2353C294.677 79.0809 294.794 78.8928 294.863 78.6858C294.932 78.4787 294.951 78.2585 294.921 78.0424V40.9259H302.132C310.402 40.9259 312.31 43.2632 312.31 52.0653V78.0424C312.279 78.2585 312.299 78.4787 312.368 78.6858C312.437 78.8928 312.553 79.0809 312.708 79.2353C312.862 79.3896 313.05 79.5058 313.257 79.5748C313.464 79.6438 313.684 79.6636 313.9 79.6327H324.714C324.93 79.6636 325.151 79.6438 325.358 79.5748C325.565 79.5058 325.753 79.3896 325.907 79.2353C326.062 79.0809 326.178 78.8928 326.247 78.6858C326.316 78.4787 326.336 78.2585 326.305 78.0424V48.7737C326.305 34.1431 315.705 30.6445 306.371 30.6445Z"
        fill="black"
      />
      <path
        d="M381.299 7.39668H370.478C369.42 7.39668 368.888 7.92924 368.888 9.41597V30.5409H357.859C347.504 30.5409 336.549 33.7215 336.549 55.2458C336.549 76.2376 347.474 79.8398 357.859 79.8398C371.328 79.8398 375.567 79.7436 381.299 79.6327C381.515 79.6605 381.734 79.6385 381.939 79.5684C382.145 79.4983 382.332 79.382 382.485 79.2284C382.639 79.0748 382.755 78.888 382.825 78.6824C382.895 78.4768 382.917 78.2579 382.889 78.0424V9.43816C382.889 7.95143 382.357 7.39668 381.299 7.39668ZM368.888 69.662H360.618C353.303 69.662 350.544 66.1633 350.544 55.4529C350.544 44.2174 353.303 40.9258 360.618 40.9258H368.888V69.662Z"
        fill="black"
      />
      <path
        d="M407.011 79.9528C412.213 79.6291 416.169 75.1493 415.845 69.9468C415.521 64.7443 411.041 60.7892 405.839 61.1129C400.636 61.4366 396.681 65.9164 397.005 71.1189C397.329 76.3214 401.808 80.2765 407.011 79.9528Z"
        fill="#FF0050"
      />
      <path
        d="M131.587 18.8763C136.8 18.8763 141.025 14.6507 141.025 9.43816C141.025 4.2256 136.8 -1.14441e-05 131.587 -1.14441e-05C126.375 -1.14441e-05 122.149 4.2256 122.149 9.43816C122.149 14.6507 126.375 18.8763 131.587 18.8763Z"
        fill="black"
      />
      <path
        d="M249.749 30.6445C241.058 30.6445 236.287 30.7554 230.562 30.859C230.339 30.8388 230.115 30.8693 229.906 30.9482C229.697 31.0272 229.508 31.1525 229.354 31.3148C229.201 31.4772 229.086 31.6722 229.018 31.8853C228.951 32.0985 228.932 32.3242 228.964 32.5454V39.3282C228.933 39.5449 228.953 39.7659 229.023 39.9736C229.092 40.1813 229.209 40.3699 229.364 40.5244C229.519 40.6789 229.708 40.795 229.916 40.8634C230.124 40.9318 230.346 40.9507 230.562 40.9185H244.875C253.144 40.9185 255.267 43.2558 255.267 47.1761V49.3951H241.583C230.562 49.3951 224.09 52.7901 224.194 64.0257C224.305 76.0083 230.666 79.825 241.694 79.825C257.493 79.825 261.946 79.7067 267.671 79.6179C267.887 79.6473 268.107 79.6263 268.313 79.5568C268.519 79.4873 268.707 79.371 268.861 79.217C269.015 79.0631 269.131 78.8756 269.2 78.6693C269.27 78.463 269.291 78.2434 269.262 78.0276V47.7012C269.239 34.1431 258.655 30.6445 249.749 30.6445ZM255.267 69.662H244.66C240.311 69.662 238.299 68.3897 238.196 64.0405C238.092 59.6912 240.207 58.4264 244.557 58.4264H255.267V69.662Z"
        fill="black"
      />
      <path
        d="M179.554 52.3833L166.936 48.2486C164.073 47.2944 163.237 46.4438 163.237 44.3209C163.237 41.88 164.51 40.8223 168.533 40.8223H186.766C186.985 40.8544 187.209 40.8343 187.418 40.7638C187.628 40.6932 187.818 40.5742 187.973 40.4163C188.128 40.2585 188.243 40.0663 188.31 39.8553C188.377 39.6444 188.393 39.4207 188.357 39.2024V32.3383C188.384 32.1229 188.362 31.9039 188.292 31.6983C188.222 31.4927 188.106 31.3059 187.952 31.1523C187.799 30.9987 187.612 30.8824 187.406 30.8123C187.201 30.7422 186.982 30.7202 186.766 30.748C181.041 30.6371 176.411 30.5409 166.514 30.5409C156.617 30.5409 149.546 33.4996 149.546 43.2632V45.0606C149.546 50.5785 153.045 55.6675 160.257 58.1084L172.343 62.1322C175.531 63.1973 176.041 63.8334 176.041 65.8305C176.041 68.5895 174.769 69.4401 171.803 69.4401H151.883C151.667 69.4092 151.447 69.429 151.24 69.498C151.033 69.567 150.845 69.6832 150.691 69.8375C150.536 69.9918 150.42 70.18 150.351 70.387C150.282 70.5941 150.262 70.8143 150.293 71.0304V77.9167C150.262 78.1327 150.282 78.353 150.351 78.56C150.42 78.7671 150.536 78.9552 150.691 79.1095C150.845 79.2638 151.033 79.3801 151.24 79.4491C151.447 79.5181 151.667 79.5379 151.883 79.507C157.609 79.6179 161.847 79.7215 171.818 79.7215C183.904 79.7215 189.843 76.859 189.843 66.8956V65.0908C189.843 60.4383 188.038 55.1349 179.554 52.3833Z"
        fill="black"
      />
      <path
        d="M442.366 30.859H431.552C430.674 30.859 429.962 31.571 429.962 32.4492V78.0424C429.962 78.9207 430.674 79.6327 431.552 79.6327H442.366C443.244 79.6327 443.956 78.9207 443.956 78.0424V32.4492C443.956 31.571 443.244 30.859 442.366 30.859Z"
        fill="black"
      />
      <path
        d="M437.633 18.8145C442.833 18.4445 446.748 13.9296 446.378 8.73022C446.008 3.5308 441.493 -0.384237 436.293 -0.0142747C431.094 0.355687 427.179 4.87056 427.549 10.07C427.919 15.2694 432.434 19.1844 437.633 18.8145Z"
        fill="black"
      />
      <path
        d="M484.934 52.3833L472.315 48.2486C469.453 47.2944 468.617 46.4438 468.617 44.3209C468.617 41.88 469.889 40.8223 473.92 40.8223H492.161C492.378 40.8518 492.6 40.8298 492.808 40.7581C493.015 40.6864 493.203 40.567 493.357 40.4095C493.51 40.252 493.624 40.0607 493.69 39.8511C493.756 39.6415 493.772 39.4193 493.736 39.2024V32.3383C493.764 32.1229 493.742 31.9039 493.672 31.6983C493.602 31.4927 493.485 31.3059 493.332 31.1523C493.178 30.9987 492.991 30.8824 492.786 30.8123C492.58 30.7422 492.361 30.7202 492.146 30.748C486.421 30.6371 481.79 30.5409 471.894 30.5409C461.997 30.5409 454.896 33.507 454.896 43.2632V45.0606C454.896 50.5785 458.395 55.6675 465.606 58.1084L477.722 62.1322C480.903 63.1973 481.421 63.8334 481.421 65.8305C481.421 68.5895 480.148 69.4401 477.175 69.4401H457.256C457.036 69.4034 456.811 69.4194 456.598 69.4868C456.386 69.5543 456.193 69.6712 456.035 69.8279C455.877 69.9847 455.758 70.1768 455.689 70.3884C455.619 70.6001 455.601 70.8252 455.636 71.0452V77.9315C455.606 78.1472 455.627 78.3668 455.697 78.5731C455.766 78.7795 455.883 78.9669 456.037 79.1209C456.191 79.2748 456.378 79.3911 456.584 79.4606C456.791 79.5302 457.01 79.5511 457.226 79.5218C462.951 79.6327 467.197 79.7363 477.16 79.7363C489.254 79.7363 495.186 76.8738 495.186 66.9104V65.0908C495.215 60.4383 493.418 55.1349 484.934 52.3833Z"
        fill="black"
      />
      <path
        d="M18.8762 70.5126C18.8901 71.7559 18.6555 72.9894 18.1861 74.1407C17.7167 75.2921 17.022 76.3381 16.1428 77.2173C15.2636 78.0965 14.2176 78.7911 13.0663 79.2605C11.9149 79.7299 10.6814 79.9646 9.43808 79.9507C6.93492 79.9507 4.53429 78.9564 2.76429 77.1864C0.994286 75.4164 -9.00924e-05 73.0157 -9.00924e-05 70.5126C-9.00924e-05 68.0094 0.994286 65.6088 2.76429 63.8388C4.53429 62.0688 6.93492 61.0744 9.43808 61.0744C10.6814 61.0605 11.9149 61.2952 13.0663 61.7646C14.2176 62.234 15.2636 62.9287 16.1428 63.8079C17.022 64.6871 17.7167 65.733 18.1861 66.8844C18.6555 68.0357 18.8901 69.2693 18.8762 70.5126ZM39.942 61.0744C38.0766 61.0802 36.2547 61.6388 34.7065 62.6794C33.1583 63.72 31.9532 65.1961 31.2434 66.9212C30.5336 68.6463 30.3509 70.5431 30.7184 72.3719C31.0859 74.2008 31.9871 75.8798 33.3083 77.1968C34.6294 78.5137 36.3111 79.4097 38.1412 79.7715C39.9712 80.1333 41.8673 79.9446 43.5902 79.2294C45.3131 78.5142 46.7854 77.3045 47.8212 75.753C48.857 74.2016 49.4098 72.378 49.4098 70.5126C49.4247 69.2665 49.1898 68.03 48.719 66.8762C48.2481 65.7224 47.5508 64.6747 46.6682 63.7949C45.7857 62.9151 44.7358 62.2211 43.5805 61.7538C42.4252 61.2865 41.188 61.0555 39.942 61.0744ZM70.4829 61.0744C68.6162 61.0744 66.7914 61.6279 65.2393 62.665C63.6872 63.7021 62.4775 65.1761 61.7632 66.9007C61.0488 68.6253 60.8619 70.523 61.2261 72.3539C61.5903 74.1847 62.4892 75.8664 63.8091 77.1864C65.1291 78.5063 66.8108 79.4052 68.6416 79.7694C70.4724 80.1336 72.3701 79.9467 74.0947 79.2323C75.8194 78.5179 77.2934 77.3082 78.3305 75.7561C79.3675 74.204 79.9211 72.3793 79.9211 70.5126C79.9349 69.2718 79.7012 68.0407 79.2336 66.8913C78.766 65.7419 78.074 64.6973 77.198 63.8185C76.3219 62.9397 75.2795 62.2444 74.1316 61.7732C72.9837 61.3021 71.7533 61.0645 70.5125 61.0744H70.4829ZM9.43808 30.5409C8.1769 30.5056 6.92144 30.7235 5.74592 31.1817C4.57041 31.64 3.4987 32.3292 2.59416 33.2088C1.68962 34.0884 0.970616 35.1404 0.479648 36.3026C-0.0113204 37.4648 -0.264282 38.7137 -0.264282 39.9754C-0.264282 41.237 -0.0113204 42.4859 0.479648 43.6481C0.970616 44.8104 1.68962 45.8623 2.59416 46.7419C3.4987 47.6215 4.57041 48.3108 5.74592 48.769C6.92144 49.2272 8.1769 49.4451 9.43808 49.4098C10.6993 49.4451 11.9547 49.2272 13.1302 48.769C14.3057 48.3108 15.3775 47.6215 16.282 46.7419C17.1865 45.8623 17.9055 44.8104 18.3965 43.6481C18.8875 42.4859 19.1404 41.237 19.1404 39.9754C19.1404 38.7137 18.8875 37.4648 18.3965 36.3026C17.9055 35.1404 17.1865 34.0884 16.282 33.2088C15.3775 32.3292 14.3057 31.64 13.1302 31.1817C11.9547 30.7235 10.6993 30.5056 9.43808 30.5409ZM39.9716 30.5409C38.1033 30.5409 36.2771 31.0954 34.7242 32.1341C33.1713 33.1728 31.9616 34.6491 31.2484 36.3758C30.5351 38.1026 30.3504 40.0022 30.7176 41.834C31.0848 43.6658 31.9873 45.3475 33.311 46.6659C34.6346 47.9844 36.3198 48.8804 38.1531 49.2404C39.9863 49.6003 41.8852 49.4082 43.6091 48.6881C45.3331 47.9681 46.8045 46.7526 47.8372 45.1957C48.8698 43.6387 49.4171 41.8103 49.4098 39.9421C49.4208 38.6988 49.1829 37.4659 48.7102 36.3159C48.2374 35.166 47.5394 34.1223 46.6571 33.2462C45.7749 32.3702 44.7262 31.6795 43.573 31.2149C42.4197 30.7503 41.1852 30.5211 39.942 30.5409H39.9716ZM70.5125 30.5409C68.6442 30.5409 66.818 31.0954 65.2651 32.1341C63.7122 33.1728 62.5025 34.6491 61.7893 36.3758C61.076 38.1026 60.8913 40.0022 61.2585 41.834C61.6257 43.6658 62.5282 45.3475 63.8519 46.6659C65.1755 47.9844 66.8607 48.8804 68.694 49.2404C70.5272 49.6003 72.4261 49.4082 74.15 48.6881C75.874 47.9681 77.3454 46.7526 78.3781 45.1957C79.4107 43.6387 79.958 41.8103 79.9507 39.9421C79.9606 38.7016 79.723 37.4716 79.2517 36.3241C78.7805 35.1766 78.085 34.1346 77.2061 33.2592C76.3272 32.3837 75.2825 31.6924 74.1332 31.2256C72.9838 30.7589 71.7529 30.5261 70.5125 30.5409ZM9.43808 -2.23938e-05C8.19479 -0.013893 6.96126 0.22076 5.8099 0.690161C4.65855 1.15956 3.61257 1.85425 2.73337 2.73344C1.85418 3.61263 1.15949 4.65861 0.690093 5.80997C0.220692 6.96133 -0.0139607 8.19486 -9.00924e-05 9.43815C-0.0139607 10.6814 0.220692 11.915 0.690093 13.0663C1.15949 14.2177 1.85418 15.2637 2.73337 16.1428C3.61257 17.022 4.65855 17.7167 5.8099 18.1861C6.96126 18.6555 8.19479 18.8902 9.43808 18.8763C10.6814 18.8902 11.9149 18.6555 13.0663 18.1861C14.2176 17.7167 15.2636 17.022 16.1428 16.1428C17.022 15.2637 17.7167 14.2177 18.1861 13.0663C18.6555 11.915 18.8901 10.6814 18.8762 9.43815C18.8901 8.19486 18.6555 6.96133 18.1861 5.80997C17.7167 4.65861 17.022 3.61263 16.1428 2.73344C15.2636 1.85425 14.2176 1.15956 13.0663 0.690161C11.9149 0.22076 10.6814 -0.013893 9.43808 -2.23938e-05ZM39.942 -2.23938e-05C38.7015 -0.00994815 37.4715 0.227674 36.324 0.698934C35.1765 1.17019 34.1346 1.86562 33.2591 2.74452C32.3837 3.62341 31.6923 4.66811 31.2256 5.81746C30.7588 6.96681 30.526 8.19772 30.5408 9.43815C30.5055 10.6993 30.7234 11.9548 31.1817 13.1303C31.6399 14.3058 32.3292 15.3775 33.2087 16.2821C34.0883 17.1866 35.1403 17.9056 36.3025 18.3966C37.4647 18.8875 38.7136 19.1405 39.9753 19.1405C41.237 19.1405 42.4858 18.8875 43.6481 18.3966C44.8103 17.9056 45.8623 17.1866 46.7418 16.2821C47.6214 15.3775 48.3107 14.3058 48.7689 13.1303C49.2272 11.9548 49.4451 10.6993 49.4098 9.43815C49.4237 8.19234 49.1881 6.95634 48.7169 5.803C48.2457 4.64967 47.5483 3.60234 46.666 2.72274C45.7836 1.84315 44.7341 1.14908 43.5793 0.681464C42.4245 0.213844 41.1878 -0.0178707 39.942 -2.23938e-05ZM70.5125 -2.23938e-05C69.2692 -0.013893 68.0357 0.22076 66.8843 0.690161C65.733 1.15956 64.687 1.85425 63.8078 2.73344C62.9286 3.61263 62.2339 4.65861 61.7645 5.80997C61.2951 6.96133 61.0605 8.19486 61.0743 9.43815C61.0743 11.9413 62.0687 14.3419 63.8387 16.1119C65.6087 17.8819 68.0093 18.8763 70.5125 18.8763C73.0157 18.8763 75.4163 17.8819 77.1863 16.1119C78.9563 14.3419 79.9507 11.9413 79.9507 9.43815C79.9645 8.19486 79.7299 6.96133 79.2605 5.80997C78.7911 4.65861 78.0964 3.61263 77.2172 2.73344C76.338 1.85425 75.292 1.15956 74.1407 0.690161C72.9893 0.22076 71.7558 -0.013893 70.5125 -2.23938e-05Z"
        fill="url(#paint0_linear)"
      />
    </g>
    <defs>
      <linearGradient
        id="paint0_linear"
        x1="2.72929"
        y1="2.72935"
        x2="77.2139"
        y2="77.214"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="#0161FD" />
        <stop offset="0.25" stopColor="#3F46D2" />
        <stop offset="0.51" stopColor="#812EA4" />
        <stop offset="0.77" stopColor="#C21578" />
        <stop offset="1" stopColor="#FD0050" />
      </linearGradient>
      <clipPath id="clip0">
        <rect width="495.215" height="79.9508" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

const appliedDataUrl =
  "https://rannis-mtckiezzpq-lz.a.run.app/rannis.json?sql=select+fund%2C+fund_year%2C+sum(applied_amount)+from+tdf_app+group+by+fund%2C+fund_year+order+by+fund%2C+fund_year%3B";

const grantedDataUrl =
  "https://rannis-mtckiezzpq-lz.a.run.app/rannis.json?sql=select+fund%2C+fund_year%2C+count(id)+from+tdf_granted+group+by+fund%2C+fund_year+order+by+fund%2C+fund_year%3B";

const genderDataUrl =
  "https://rannis-mtckiezzpq-lz.a.run.app/rannis.json?sql=select+gender%2C+book_year%2C+sum(book_amount)+from+tdf_contract+where+book_year+group+by+book_year%2C+gender%3B";

const FundGraph = (props) => {
  const [data, setData] = useState(null);

  useEffect(async () => {
    const response = await fetch(props.url);
    const responseData = await response.json();
    setData(responseData);
  }, []);

  if (data === null) {
    return <div>Loading</div>;
  }

  let start = data.rows[0][1];
  let end = start;
  let funds = [];

  data.rows.forEach(([fund, year, _]) => {
    if (year < start) start = year;
    if (year > start) end = year;
    if (funds.indexOf(fund) === -1) {
      funds.push(fund);
    }
  });

  const yearRange = [...Array(end - start).keys()].map((i) => {
    return i + start;
  });

  return (
    <VictoryChart
      domainPadding={20}
      padding={{ left: 100, top: 40, bottom: 40 }}
      width={750}
      theme={theme}
    >
      <VictoryAxis tickValues={yearRange} />
      <VictoryAxis dependentAxis tickFormat={props.tickFormat} />
      <VictoryStack>
        {funds.map((_fund) => {
          const fundData = yearRange.map((_year) => {
            let _amount = 0;
            const fundData = data.rows.map(([fund, year, amount]) => {
              if (_fund === fund && year === _year) {
                _amount = amount;
              }
            });
            return { amount: _amount, year: _year };
          });
          return <VictoryBar key={_fund} data={fundData} x="year" y="amount" />;
        })}
      </VictoryStack>
      <VictoryLegend
        x={135}
        y={0}
        orientation="horizontal"
        gutter={20}
        style={{ border: { width: 0 }, title: { fontSize: 20 } }}
        data={funds.map((_fund, i) => {
          const color = theme.group.colorScale[i];
          return { name: _fund || "Annað", symbol: { fill: color } };
        })}
      />
    </VictoryChart>
  );
};

function App() {
  return (
    <div className="h-screen flex flex-col p-4">
      <header>
        <div className="mb-4 w-full">
          <Logo />
        </div>
        <div className="text-sm mb-8 font-bold text-primary">
          Ísland.is · Opin gögn · RANNÍS
        </div>
      </header>
      <div className="flex-grow flex flex-col">
        <div className="text-3xl mb-8">Tækniþróunarsjóður</div>
        <div className="grid gap-4 grid-cols-1 lg:grid-cols-2">
          <div className="w-full">
            <div className="text-xl mb-4">Heildarfjárhæðir umsókna</div>
            <FundGraph
              url={appliedDataUrl}
              tickFormat={(x) => {
                return `${(x / (1000 * 1000)).toLocaleString("is-is", {
                  maximumFractionDigits: 0,
                })} m. kr.`;
              }}
            />
            <div className="text-right text-xs text-primary">
              <a href={appliedDataUrl}>JSON</a> ·{" "}
              <a href={appliedDataUrl.replace(".json?", "?")}>Datasette SQL</a>
            </div>
          </div>
          <div className="w-full">
            <div className="text-xl mb-4">Fjöldi samþykktra umsókna</div>
            <FundGraph
              url={grantedDataUrl}
              tickFormat={(x) => {
                return x.toLocaleString("is-is");
              }}
            />
            <div className="text-right text-xs text-primary">
              <a href={grantedDataUrl}>JSON</a> ·{" "}
              <a href={grantedDataUrl.replace(".json?", "?")}>Datasette SQL</a>
            </div>
          </div>
          <div className="w-full">
            <div className="text-xl mb-4">
              Kynjaskipting á samþykktum styrkveitingum
            </div>
            <FundGraph
              url={genderDataUrl}
              tickFormat={(x) => {
                return `${(x / (1000 * 1000)).toLocaleString("is-is")} m. kr.`;
              }}
              labels={({ datum }) => datum.y}
            />
            <div className="text-right text-xs text-primary">
              <a href={genderDataUrl}>JSON</a> ·{" "}
              <a href={genderDataUrl.replace(".json?", "?")}>Datasette SQL</a>
            </div>
          </div>
        </div>
      </div>
      <footer>-</footer>
    </div>
  );
}

export default App;
